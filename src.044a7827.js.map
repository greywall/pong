{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Goldenball.js","src/partials/Score.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","KEYS","a","z","up","down","spaceBar","PaddleOptions","paddleWidth","paddleHeight","boardGap","Board","width","height","svg","rect","document","createElementNS","setAttributeNS","line","appendChild","Paddle","boardHeight","x","y","color","upKey","downKey","id","speed","score","keyState","addEventListener","event","key","console","log","Math","max","min","Ball","radius","boardWidth","direction","ping","Audio","pingSound","count","reset","vy","random","vx","abs","hitleft","hitright","hittop","hitbottom","player1","player2","play","player","alert","wallCollision","paddleCollision","circle","rightGoal","leftGoal","goal","Goldenball","args","Score","size","text","textContent","Game","element","gameElement","getElementById","board","score1","score2","goldenball","ball2","pause","firstScreen","innerHTML","render","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.044a7827.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\r\n\r\nexport const KEYS = {\r\n  a: \"a\", // player 1 up key\r\n  z: \"z\", // player 1 down key\r\n  up: \"ArrowUp\", // player 2 up key\r\n  down: \"ArrowDown\", // player 2 down key\r\n  spaceBar: \" \" // we'll use this later...\r\n};\r\n\r\nexport const PaddleOptions = {\r\n  paddleWidth: 8,\r\n  paddleHeight: 80,\r\n  boardGap: 30\r\n};\r\n","import { SVG_NS } from \"../settings\";\r\n\r\nexport default class Board {\r\n  constructor(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n  render(svg) {\r\n    //svg to append, svg is a variable\r\n    let rect = document.createElementNS(SVG_NS, \"rect\");\r\n    rect.setAttributeNS(null, \"fill\", \"green\");\r\n    rect.setAttributeNS(null, \"width\", this.width);\r\n    rect.setAttributeNS(null, \"height\", this.height);\r\n\r\n    let line = document.createElementNS(SVG_NS, \"line\");\r\n    line.setAttributeNS(null, \"x1\", this.width / 2);\r\n    line.setAttributeNS(null, \"x2\", this.width / 2);\r\n    line.setAttributeNS(null, \"y2\", this.height);\r\n    line.setAttributeNS(null, \"y1\", 0);\r\n    line.setAttributeNS(null, \"stroke\", \"white\");\r\n    line.setAttributeNS(null, \"stroke-dasharray\", \"20,15\");\r\n    line.setAttributeNS(null, \"stroke-width\", \"5\");\r\n\r\n    \r\n\r\n    svg.appendChild(rect);\r\n    svg.appendChild(line);\r\n  }\r\n}\r\n","import { SVG_NS, KEYS } from \"../settings\";\r\n\r\nexport default class Paddle {\r\n  constructor(\r\n    boardHeight,\r\n    width,\r\n    height,\r\n    x,\r\n    y,\r\n    color = \"green\",\r\n    upKey,\r\n    downKey,\r\n    id\r\n  ) {\r\n    this.boardHeight = boardHeight;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.speed = 10;\r\n    this.score = 0;\r\n    this.color = color;\r\n    this.upKey = upKey;\r\n    this.downKey = downKey;\r\n\r\n    this.id = id;\r\n    // this.playerName = playerName;\r\n\r\n    this.keyState = {};\r\n\r\n    document.addEventListener(\"keydown\", event => {\r\n      this.keyState[event.key] = true;\r\n    });\r\n\r\n    document.addEventListener(\"keyup\", event => {\r\n      this.keyState[event.key] = false;\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", event => {\r\n      switch (event.key) {\r\n        case up:\r\n          this.up();\r\n          break;\r\n        case down:\r\n          this.down();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  up() {\r\n    // this.y = this.y - this.speed;\r\n    console.log(\"move up\");\r\n    this.y = Math.max(0, this.y - this.speed);\r\n  }\r\n\r\n  down() {\r\n    // this.y = this.y + this.speed;\r\n    console.log(\"move down\");\r\n    this.y = Math.min(this.boardHeight - this.height, this.y + this.speed);\r\n  }\r\n\r\n  render(svg) {\r\n    if (this.keyState[KEYS.a] && this.upKey === KEYS.a) {\r\n      this.up();\r\n    }\r\n\r\n    if (this.keyState[KEYS.z] && this.downKey === KEYS.z) {\r\n      this.down();\r\n    }\r\n\r\n    if (this.keyState[KEYS.up] && this.upKey === KEYS.up) {\r\n      this.up();\r\n    }\r\n\r\n    if (this.keyState[KEYS.down] && this.downKey === KEYS.down) {\r\n      this.down();\r\n    }\r\n\r\n    let rect = document.createElementNS(SVG_NS, \"rect\");\r\n    // rect.setAttributeNS(null, \"fill\", \"white\");\r\n    rect.setAttributeNS(null, \"width\", this.width);\r\n    rect.setAttributeNS(null, \"height\", this.height);\r\n    rect.setAttributeNS(null, \"x\", this.x);\r\n    rect.setAttributeNS(null, \"y\", this.y);\r\n    rect.setAttributeNS(null, \"fill\", this.color);\r\n\r\n    svg.appendChild(rect); //append passes svg to parent.\r\n  }\r\n}\r\n","import { SVG_NS } from \"../settings\";\r\nimport pingSound from \"../../public/sounds/pong-01.wav\";\r\n\r\nexport default class Ball {\r\n  constructor(radius, boardWidth, boardHeight, color = \"white\") {\r\n    this.radius = radius;\r\n    this.boardWidth = boardWidth;\r\n    this.boardHeight = boardHeight;\r\n    this.direction = -1;\r\n    this.color = color;\r\n\r\n    this.ping = new Audio(pingSound);\r\n    this.count = 120;\r\n    this.reset();\r\n  }\r\n\r\n  \r\n\r\n  reset() {\r\n    this.x = this.boardWidth / 2;\r\n    this.y = this.boardHeight / 2;\r\n\r\n    this.vy = 0;\r\n    while (this.vy === 0) {\r\n      this.vy = Math.random() * 10 - 5;\r\n    }\r\n    console.log(\"vy\", this.vy);\r\n\r\n    this.vx = this.direction * (6 - Math.abs(this.vy));\r\n    console.log(\"vx\", this.vx);\r\n  }\r\n\r\n\r\n  wallCollision() {\r\n    const hitleft = this.x - this.radius <= 0;\r\n    const hitright = this.x + this.radius >= this.boardWidth;\r\n    const hittop = this.y - this.radius <= 0;\r\n    const hitbottom = this.y + this.radius >= this.boardHeight;\r\n\r\n    if (hitleft || hitright) {\r\n      // this.vx = -this.vx;\r\n      this.vx *= -1;\r\n      // this.ax *= -1;\r\n    } else if (hittop || hitbottom) {\r\n      this.vy *= -1;\r\n    }\r\n  }\r\n\r\n  paddleCollision(player1, player2) {\r\n    // moving right\r\n\r\n    // console.log(\"player1\", player1);\r\n    // console.log(\"player2\", player2);\r\n\r\n    if (this.vx > 0) {\r\n      // collision detection for right paddle\r\n      if (\r\n        this.x + this.radius >= player2.x && // right edge of the ball is >= left edge of the paddle\r\n        this.x + this.radius <= player2.x + player2.width && // right edge of the ball is <= right edge of the paddle\r\n        (this.y >= player2.y && this.y <= player2.y + player2.height) // ball Y is >= paddle top Y and <= paddle bottom Y\r\n      ) {\r\n        // if true then there's a collision\r\n        this.vx *= -1.02;\r\n        this.vy -= Math.random() - 2;\r\n\r\n        this.ping.play();\r\n        // this.vy -= -1.15;\r\n      \r\n        \r\n\r\n        this.ping.play();\r\n        //this.player1.height -=-5 this will decrease player1s height for hitting the ball. //or change player color after hit, player1.height -=5; setTimeout(function()) {reset color,} 200\r\n        //let player2.color = 'red' setTimeout(function()) {player2.color= playercolor;} 200;\r\n      }\r\n    } else {\r\n      // moving left\r\n      if (\r\n        this.x - this.radius <= player1.x + player1.width &&\r\n        this.x - this.radius >= player1.x &&\r\n        (this.y >= player1.y && this.y <= player1.y + player1.height)\r\n      ) {\r\n        this.vx *= -1.02;\r\n        this.vy -= Math.random() - 2;\r\n        \r\n        this.ping.play();\r\n      }\r\n    }\r\n  }\r\n\r\n  goal(player, score) {\r\n    player.score += 10;\r\n    this.count = 0;\r\n\r\n    this.reset();\r\n\r\n  \r\n    console.log(\"player id \", player.id);\r\n    \r\n    if (player.score <= 500) {\r\n      \r\n      this.reset();\r\n    } else {alert(`${player.id} wins with ${player.score} points`);\r\n    \r\n  }\r\n  }\r\n      \r\n\r\n  render(svg, player1, player2) {\r\n\r\n      this.count ++;\r\n      if (this.count <= 120) {\r\n        this.reset();\r\n      }\r\n\r\n    //need to add player 1, player 2, this colors the ball movement.\r\n    this.x += this.vx; //+= this.ax\r\n    this.y += this.vy;\r\n\r\n    this.wallCollision();\r\n\r\n    this.paddleCollision(player1, player2);\r\n\r\n    let circle = document.createElementNS(SVG_NS, \"circle\");\r\n    circle.setAttributeNS(null, \"r\", this.radius);\r\n    circle.setAttributeNS(null, \"cx\", this.x);\r\n    circle.setAttributeNS(null, \"cy\", this.y);\r\n    circle.setAttributeNS(null, \"fill\", this.color);\r\n    svg.appendChild(circle); //append passes svg to parent.\r\n\r\n    const rightGoal = this.x + this.radius >= this.boardWidth;\r\n    const leftGoal = this.x - this.radius <= 0;\r\n\r\n    if (rightGoal) {\r\n      this.goal(player1);\r\n      this.direction = 1;\r\n    } else if (leftGoal) {\r\n      this.goal(player2);\r\n      this.direction = -1;\r\n    }\r\n\r\n    if (rightGoal && player1.score >= 500) {\r\n      \r\n      player1.score = 0;\r\n      player2.score = 0;\r\n      this.reset();\r\n    } else if (leftGoal && player2.score >= 500) {\r\n      \r\n      player1.score = 0;\r\n      player2.score = 0;\r\n      this.reset();\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","import { SVG_NS } from \"../settings\";\r\nimport Ball from \"./Ball\";\r\n\r\nexport default class Goldenball extends Ball {\r\n  constructor(...args) {\r\n    super(...args);\r\n  }\r\n\r\n  goal(player, score) {\r\n    player.score += 100;\r\n    this.reset();\r\n    console.log(\"player id \", player.id);\r\n    \r\n    if (player.score <= 500) {\r\n      \r\n      this.reset();\r\n    } else {alert(`${player.id} wins the Hogwarts Quidditch Cup with ${player.score} points`);\r\n    \r\n \r\n  }\r\n  \r\n}\r\n}\r\n","import { SVG_NS } from \"../settings\";\r\nimport Ball from \"./Ball\";\r\nimport Goldenball from \"./Goldenball\";\r\n\r\nexport default class Score {\r\n  constructor(x, y, size) {\r\n    this.x = x; //location of display score\r\n    this.y = y; //location of the display score\r\n    this.size = size; //font-size\r\n  }\r\n\r\n  render(svg, score) {\r\n    let text = document.createElementNS(SVG_NS, \"text\");\r\n\r\n    text.setAttributeNS(null, \"x\", this.x);\r\n    text.setAttributeNS(null, \"y\", this.y);\r\n    text.setAttributeNS(null, \"font-family\", '\"silkscreen Web\", monotype');\r\n    text.setAttributeNS(null, \"font-size\", this.size);\r\n    text.setAttributeNS(null, \"fill\", \"white\");\r\n    text.textContent = score;\r\n    svg.appendChild(text);\r\n  }\r\n}\r\n","import Board from \"./Board\";\nimport Paddle from \"./Paddle\";\nimport Ball from \"./Ball\";\nimport Score from \"./Score\";\nimport Goldenball from \"./Goldenball\";\n\nimport { SVG_NS, KEYS, PaddleOptions } from \"../settings\";\nimport { CLIENT_RENEG_LIMIT } from \"tls\";\n\nexport default class Game {\n  constructor(element, width, height) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n\n    this.gameElement = document.getElementById(this.element);\n    this.board = new Board(this.width, this.height);\n\n  \n\n\n    this.player1 = new Paddle(\n      this.height, //board height\n      PaddleOptions.paddleWidth,\n      PaddleOptions.paddleHeight,\n      PaddleOptions.boardGap,\n      (this.height - PaddleOptions.paddleHeight) / 2,\n    \n      \"#ecb939\",\n      KEYS.up,\n      KEYS.down,\n      \"Hufflepuff\"\n    );\n\n    this.player2 = new Paddle(\n      this.height, //board height\n      PaddleOptions.paddleWidth,\n      PaddleOptions.paddleHeight,\n      this.width - (PaddleOptions.boardGap + PaddleOptions.paddleWidth),\n      (this.height - PaddleOptions.paddleHeight) / 2,\n    \n      \"#222f5b\",\n      KEYS.a,\n      KEYS.z,\n      \"Ravenclaw\"\n    );\n\n    this.score1 = new Score(this.width / 2 - 90, 30, 30); //location of score board\n    this.score2 = new Score(this.width / 2 + 30, 30, 30);\n\n    this.goldenball = new Goldenball(4, this.width, this.height, \"gold\");\n    this.ball2 = new Ball(12, this.width, this.height, \"#654321\");\n\n    document.addEventListener(\"keydown\", event => {\n      switch (event.key) {\n        case KEYS.spaceBar:\n          this.pause = !this.pause;\n          break;\n      }\n    });\n\n    this.firstScreen =  true;\n  } //end of constructor\n\n\n  render() {\n    if (this.pause) {\n      return;\n    }\n\n\n\n    this.gameElement.innerHTML = \"\"; //clear the html before appending to fix the render bug\n    let svg = document.createElementNS(SVG_NS, \"svg\");\n    svg.setAttributeNS(null, \"width\", this.width);\n    svg.setAttributeNS(null, \"height\", this.height);\n    svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n    this.gameElement.appendChild(svg);\n    this.board.render(svg);\n    this.player1.render(svg);\n    this.player2.render(svg);\n    this.goldenball.render(svg, this.player1, this.player2);\n    this.ball2.render(svg, this.player1, this.player2); \n\n    this.score1.render(svg, this.player1.score);\n    this.score2.render(svg, this.player2.score);\n  }\n}\n","import \"./styles/game.css\";\nimport Game from \"./partials/Game\";\n\n// create a game instance\nconst game = new Game(\"game\", 768, 384);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop); //Comment out to turn this off for debugging.\n})();\n"]}