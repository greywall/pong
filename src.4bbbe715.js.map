{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Goldenball.js","src/partials/Score.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","KEYS","a","z","up","down","spaceBar","PaddleOptions","paddleWidth","paddleHeight","boardGap","Board","width","height","svg","rect","document","createElementNS","setAttributeNS","line","appendChild","Paddle","boardHeight","x","y","color","upKey","downKey","id","speed","score","keyState","addEventListener","event","key","console","log","Math","max","min","Ball","radius","boardWidth","direction","ping","Audio","pingSound","reset","vy","random","vx","abs","hitleft","hitright","hittop","hitbottom","player1","player2","play","player","alert","wallCollision","paddleCollision","circle","rightGoal","leftGoal","goal","Goldenball","args","Score","size","text","textContent","Game","element","gameElement","getElementById","board","score1","score2","goldenball","ball2","pause","innerHTML","render","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.4bbbe715.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\r\n\r\nexport const KEYS = {\r\n  a: \"a\", // player 1 up key\r\n  z: \"z\", // player 1 down key\r\n  up: \"ArrowUp\", // player 2 up key\r\n  down: \"ArrowDown\", // player 2 down key\r\n  spaceBar: \" \" // we'll use this later...\r\n};\r\n\r\nexport const PaddleOptions = {\r\n  paddleWidth: 8,\r\n  paddleHeight: 80,\r\n  boardGap: 30\r\n};\r\n","import { SVG_NS } from \"../settings\";\r\n\r\nexport default class Board {\r\n  constructor(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n  render(svg) {\r\n    //svg to append, svg is a variable\r\n    let rect = document.createElementNS(SVG_NS, \"rect\");\r\n    rect.setAttributeNS(null, \"fill\", \"green\");\r\n    rect.setAttributeNS(null, \"width\", this.width);\r\n    rect.setAttributeNS(null, \"height\", this.height);\r\n\r\n    let line = document.createElementNS(SVG_NS, \"line\");\r\n    line.setAttributeNS(null, \"x1\", this.width / 2);\r\n    line.setAttributeNS(null, \"x2\", this.width / 2);\r\n    line.setAttributeNS(null, \"y2\", this.height);\r\n    line.setAttributeNS(null, \"y1\", 0);\r\n    line.setAttributeNS(null, \"stroke\", \"white\");\r\n    line.setAttributeNS(null, \"stroke-dasharray\", \"20,15\");\r\n    line.setAttributeNS(null, \"stroke-width\", \"5\");\r\n\r\n    \r\n\r\n    svg.appendChild(rect);\r\n    svg.appendChild(line);\r\n  }\r\n}\r\n","import { SVG_NS, KEYS } from \"../settings\";\r\n\r\nexport default class Paddle {\r\n  constructor(\r\n    boardHeight,\r\n    width,\r\n    height,\r\n    x,\r\n    y,\r\n    color = \"green\",\r\n    upKey,\r\n    downKey,\r\n    id\r\n  ) {\r\n    this.boardHeight = boardHeight;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.speed = 10;\r\n    this.score = 0;\r\n    this.color = color;\r\n    this.upKey = upKey;\r\n    this.downKey = downKey;\r\n\r\n    this.id = id;\r\n    // this.playerName = playerName;\r\n\r\n    this.keyState = {};\r\n\r\n    document.addEventListener(\"keydown\", event => {\r\n      this.keyState[event.key] = true;\r\n    });\r\n\r\n    document.addEventListener(\"keyup\", event => {\r\n      this.keyState[event.key] = false;\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", event => {\r\n      switch (event.key) {\r\n        case up:\r\n          this.up();\r\n          break;\r\n        case down:\r\n          this.down();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  up() {\r\n    // this.y = this.y - this.speed;\r\n    console.log(\"move up\");\r\n    this.y = Math.max(0, this.y - this.speed);\r\n  }\r\n\r\n  down() {\r\n    // this.y = this.y + this.speed;\r\n    console.log(\"move down\");\r\n    this.y = Math.min(this.boardHeight - this.height, this.y + this.speed);\r\n  }\r\n\r\n  render(svg) {\r\n    if (this.keyState[KEYS.a] && this.upKey === KEYS.a) {\r\n      this.up();\r\n    }\r\n\r\n    if (this.keyState[KEYS.z] && this.downKey === KEYS.z) {\r\n      this.down();\r\n    }\r\n\r\n    if (this.keyState[KEYS.up] && this.upKey === KEYS.up) {\r\n      this.up();\r\n    }\r\n\r\n    if (this.keyState[KEYS.down] && this.downKey === KEYS.down) {\r\n      this.down();\r\n    }\r\n\r\n    let rect = document.createElementNS(SVG_NS, \"rect\");\r\n    // rect.setAttributeNS(null, \"fill\", \"white\");\r\n    rect.setAttributeNS(null, \"width\", this.width);\r\n    rect.setAttributeNS(null, \"height\", this.height);\r\n    rect.setAttributeNS(null, \"x\", this.x);\r\n    rect.setAttributeNS(null, \"y\", this.y);\r\n    rect.setAttributeNS(null, \"fill\", this.color);\r\n\r\n    svg.appendChild(rect); //append passes svg to parent.\r\n  }\r\n}\r\n","import { SVG_NS } from \"../settings\";\r\nimport pingSound from \"../../public/sounds/pong-01.wav\";\r\n\r\nexport default class Ball {\r\n  constructor(radius, boardWidth, boardHeight, color = \"white\") {\r\n    this.radius = radius;\r\n    this.boardWidth = boardWidth;\r\n    this.boardHeight = boardHeight;\r\n    this.direction = -1;\r\n    this.color = color;\r\n\r\n    this.ping = new Audio(pingSound);\r\n\r\n    this.reset();\r\n  }\r\n\r\n  \r\n\r\n  reset() {\r\n    this.x = this.boardWidth / 2;\r\n    this.y = this.boardHeight / 2;\r\n\r\n    this.vy = 0;\r\n    while (this.vy === 0) {\r\n      this.vy = Math.random() * 10 - 5;\r\n    }\r\n    console.log(\"vy\", this.vy);\r\n\r\n    this.vx = this.direction * (6 - Math.abs(this.vy));\r\n    console.log(\"vx\", this.vx);\r\n  }\r\n\r\n\r\n  wallCollision() {\r\n    const hitleft = this.x - this.radius <= 0;\r\n    const hitright = this.x + this.radius >= this.boardWidth;\r\n    const hittop = this.y - this.radius <= 0;\r\n    const hitbottom = this.y + this.radius >= this.boardHeight;\r\n\r\n    if (hitleft || hitright) {\r\n      // this.vx = -this.vx;\r\n      this.vx *= -1.01;\r\n      // this.ax *= -1;\r\n    } else if (hittop || hitbottom) {\r\n      this.vy *= -1.;\r\n    }\r\n  }\r\n\r\n  paddleCollision(player1, player2) {\r\n    // moving right\r\n\r\n    // console.log(\"player1\", player1);\r\n    // console.log(\"player2\", player2);\r\n\r\n    if (this.vx > 0) {\r\n      // collision detection for right paddle\r\n      if (\r\n        this.x + this.radius >= player2.x && // right edge of the ball is >= left edge of the paddle\r\n        this.x + this.radius <= player2.x + player2.width && // right edge of the ball is <= right edge of the paddle\r\n        (this.y >= player2.y && this.y <= player2.y + player2.height) // ball Y is >= paddle top Y and <= paddle bottom Y\r\n      ) {\r\n        // if true then there's a collision\r\n        this.vx *= -1;\r\n        this.vy -= -1.15;\r\n\r\n        this.ping.play();\r\n        //this.player1.height -=-5 this will decrease player1s height for hitting the ball. //or change player color after hit, player1.height -=5; setTimeout(function()) {reset color,} 200\r\n        //let player2.color = 'red' setTimeout(function()) {player2.color= playercolor;} 200;\r\n      }\r\n    } else {\r\n      // moving left\r\n      if (\r\n        this.x - this.radius <= player1.x + player1.width &&\r\n        this.x - this.radius >= player1.x &&\r\n        (this.y >= player1.y && this.y <= player1.y + player1.height)\r\n      ) {\r\n        this.vx *= -1;\r\n        this.vy -= -1.15;\r\n        this.ping.play();\r\n      }\r\n    }\r\n  }\r\n\r\n  goal(player, score) {\r\n    player.score += 10;\r\n    this.reset();\r\n    console.log(\"player id \", player.id);\r\n    \r\n    if (player.score <= 500) {\r\n      \r\n      this.reset();\r\n    } else {alert(`${player.id} wins with ${player.score} points`);\r\n    \r\n  }\r\n  }\r\n      \r\n\r\n  render(svg, player1, player2) {\r\n    //need to add player 1, player 2, this colors the ball movement.\r\n    this.x += this.vx; //+= this.ax\r\n    this.y += this.vy;\r\n\r\n    this.wallCollision();\r\n\r\n    this.paddleCollision(player1, player2);\r\n\r\n    let circle = document.createElementNS(SVG_NS, \"circle\");\r\n    circle.setAttributeNS(null, \"r\", this.radius);\r\n    circle.setAttributeNS(null, \"cx\", this.x);\r\n    circle.setAttributeNS(null, \"cy\", this.y);\r\n    circle.setAttributeNS(null, \"fill\", this.color);\r\n    svg.appendChild(circle); //append passes svg to parent.\r\n\r\n    const rightGoal = this.x + this.radius >= this.boardWidth;\r\n    const leftGoal = this.x - this.radius <= 0;\r\n\r\n    if (rightGoal) {\r\n      this.goal(player1);\r\n      this.direction = 1;\r\n    } else if (leftGoal) {\r\n      this.goal(player2);\r\n      this.direction = -1;\r\n    }\r\n\r\n    if (rightGoal && player1.score >= 500) {\r\n      \r\n      player1.score = 0;\r\n      player2.score = 0;\r\n      this.reset();\r\n    } else if (leftGoal && player2.score >= 500) {\r\n      \r\n      player1.score = 0;\r\n      player2.score = 0;\r\n      this.reset();\r\n    }\r\n  }\r\n}\r\n","import { SVG_NS } from \"../settings\";\r\nimport Ball from \"./Ball\";\r\n\r\nexport default class Goldenball extends Ball {\r\n  constructor(...args) {\r\n    super(...args);\r\n  }\r\n\r\n  goal(player, score) {\r\n    player.score += 100;\r\n    this.reset();\r\n    console.log(\"player id \", player.id);\r\n    \r\n    if (player.score <= 500) {\r\n      \r\n      this.reset();\r\n    } else {alert(`${player.id} wins the Hogwarts Quidditch Cup with ${player.score} points`);\r\n    \r\n \r\n  }\r\n  \r\n}\r\n}\r\n","import { SVG_NS } from \"../settings\";\r\nimport Ball from \"./Ball\";\r\nimport Goldenball from \"./Goldenball\";\r\n\r\nexport default class Score {\r\n  constructor(x, y, size) {\r\n    this.x = x; //location of display score\r\n    this.y = y; //location of the display score\r\n    this.size = size; //font-size\r\n  }\r\n\r\n  render(svg, score) {\r\n    let text = document.createElementNS(SVG_NS, \"text\");\r\n\r\n    text.setAttributeNS(null, \"x\", this.x);\r\n    text.setAttributeNS(null, \"y\", this.y);\r\n    text.setAttributeNS(null, \"font-family\", '\"silkscreen Web\", monotype');\r\n    text.setAttributeNS(null, \"font-size\", this.size);\r\n    text.setAttributeNS(null, \"fill\", \"white\");\r\n    text.textContent = score;\r\n    svg.appendChild(text);\r\n\r\n    // set attirtubes\r\n    //append score\r\n  }\r\n}\r\n","import Board from \"./Board\";\nimport Paddle from \"./Paddle\";\nimport Ball from \"./Ball\";\nimport Score from \"./Score\";\nimport Goldenball from \"./Goldenball\";\n\nimport { SVG_NS, KEYS, PaddleOptions } from \"../settings\";\nimport { CLIENT_RENEG_LIMIT } from \"tls\";\n\nexport default class Game {\n  constructor(element, width, height) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n\n    this.gameElement = document.getElementById(this.element);\n    this.board = new Board(this.width, this.height);\n\n  \n\n\n    this.player1 = new Paddle(\n      this.height, //board height\n      PaddleOptions.paddleWidth,\n      PaddleOptions.paddleHeight,\n      PaddleOptions.boardGap,\n      (this.height - PaddleOptions.paddleHeight) / 2,\n    \n      \"#ecb939\",\n      KEYS.up,\n      KEYS.down,\n      \"Hufflepuff\"\n    );\n\n    this.player2 = new Paddle(\n      this.height, //board height\n      PaddleOptions.paddleWidth,\n      PaddleOptions.paddleHeight,\n      this.width - (PaddleOptions.boardGap + PaddleOptions.paddleWidth),\n      (this.height - PaddleOptions.paddleHeight) / 2,\n    \n      \"#222f5b\",\n      KEYS.a,\n      KEYS.z,\n      \"Ravenclaw\"\n    );\n\n    this.score1 = new Score(this.width / 2 - 90, 30, 30); //location of score board\n    this.score2 = new Score(this.width / 2 + 30, 30, 30);\n\n    this.goldenball = new Goldenball(4, this.width, this.height, \"gold\");\n    this.ball2 = new Ball(12, this.width, this.height, \"#654321\");\n\n    document.addEventListener(\"keydown\", event => {\n      switch (event.key) {\n        case KEYS.spaceBar:\n          this.pause = !this.pause;\n          break;\n      }\n    });\n\n   \n  } //end of constructor\n\n\n  render() {\n    if (this.pause) {\n      return;\n    }\n\n    this.gameElement.innerHTML = \"\"; //clear the html before appending to fix the render bug\n    let svg = document.createElementNS(SVG_NS, \"svg\");\n    svg.setAttributeNS(null, \"width\", this.width);\n    svg.setAttributeNS(null, \"height\", this.height);\n    svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n    this.gameElement.appendChild(svg);\n    this.board.render(svg);\n    this.player1.render(svg);\n    this.player2.render(svg);\n    this.goldenball.render(svg, this.player1, this.player2);\n    this.ball2.render(svg, this.player1, this.player2); \n\n    this.score1.render(svg, this.player1.score);\n    this.score2.render(svg, this.player2.score);\n  }\n}\n","import \"./styles/game.css\";\nimport Game from \"./partials/Game\";\n\n// create a game instance\nconst game = new Game(\"game\", 768, 384);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop); //Comment out to turn this off for debugging.\n})();\n"]}